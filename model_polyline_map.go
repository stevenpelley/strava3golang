/*
Strava API v3

The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package strava3golang

import (
	"encoding/json"
)

// checks if the PolylineMap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolylineMap{}

// PolylineMap struct for PolylineMap
type PolylineMap struct {
	// The identifier of the map
	Id *string `json:"id,omitempty"`
	// The polyline of the map, only returned on detailed representation of an object
	Polyline *string `json:"polyline,omitempty"`
	// The summary polyline of the map
	SummaryPolyline *string `json:"summary_polyline,omitempty"`
}

// NewPolylineMap instantiates a new PolylineMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolylineMap() *PolylineMap {
	this := PolylineMap{}
	return &this
}

// NewPolylineMapWithDefaults instantiates a new PolylineMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolylineMapWithDefaults() *PolylineMap {
	this := PolylineMap{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PolylineMap) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolylineMap) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PolylineMap) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PolylineMap) SetId(v string) {
	o.Id = &v
}

// GetPolyline returns the Polyline field value if set, zero value otherwise.
func (o *PolylineMap) GetPolyline() string {
	if o == nil || IsNil(o.Polyline) {
		var ret string
		return ret
	}
	return *o.Polyline
}

// GetPolylineOk returns a tuple with the Polyline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolylineMap) GetPolylineOk() (*string, bool) {
	if o == nil || IsNil(o.Polyline) {
		return nil, false
	}
	return o.Polyline, true
}

// HasPolyline returns a boolean if a field has been set.
func (o *PolylineMap) HasPolyline() bool {
	if o != nil && !IsNil(o.Polyline) {
		return true
	}

	return false
}

// SetPolyline gets a reference to the given string and assigns it to the Polyline field.
func (o *PolylineMap) SetPolyline(v string) {
	o.Polyline = &v
}

// GetSummaryPolyline returns the SummaryPolyline field value if set, zero value otherwise.
func (o *PolylineMap) GetSummaryPolyline() string {
	if o == nil || IsNil(o.SummaryPolyline) {
		var ret string
		return ret
	}
	return *o.SummaryPolyline
}

// GetSummaryPolylineOk returns a tuple with the SummaryPolyline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolylineMap) GetSummaryPolylineOk() (*string, bool) {
	if o == nil || IsNil(o.SummaryPolyline) {
		return nil, false
	}
	return o.SummaryPolyline, true
}

// HasSummaryPolyline returns a boolean if a field has been set.
func (o *PolylineMap) HasSummaryPolyline() bool {
	if o != nil && !IsNil(o.SummaryPolyline) {
		return true
	}

	return false
}

// SetSummaryPolyline gets a reference to the given string and assigns it to the SummaryPolyline field.
func (o *PolylineMap) SetSummaryPolyline(v string) {
	o.SummaryPolyline = &v
}

func (o PolylineMap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolylineMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Polyline) {
		toSerialize["polyline"] = o.Polyline
	}
	if !IsNil(o.SummaryPolyline) {
		toSerialize["summary_polyline"] = o.SummaryPolyline
	}
	return toSerialize, nil
}

type NullablePolylineMap struct {
	value *PolylineMap
	isSet bool
}

func (v NullablePolylineMap) Get() *PolylineMap {
	return v.value
}

func (v *NullablePolylineMap) Set(val *PolylineMap) {
	v.value = val
	v.isSet = true
}

func (v NullablePolylineMap) IsSet() bool {
	return v.isSet
}

func (v *NullablePolylineMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolylineMap(val *PolylineMap) *NullablePolylineMap {
	return &NullablePolylineMap{value: val, isSet: true}
}

func (v NullablePolylineMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolylineMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


